{"version":3,"sources":["app.coffee","controllers/CalendarController.coffee","controllers/authController.coffee","controllers/dollController.coffee","controllers/linkController.coffee","controllers/main.ng.coffee","controllers/profileController.coffee","directives/mixin_directives.coffee","filters/fullName.coffee","services/dolls.coffee","services/events.coffee","services/links.coffee","services/lodash.coffee","services/profiles.coffee"],"names":[],"mappings":"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","file":"ng.js","sourcesContent":["console.log('Angular loaded');\n\n# console.log('Angular path ' + $location.url());\n\n\nngApp = angular.module('dollhouse', ['ngRoute', 'ngResource', \"ngSanitize\", 'ui.bootstrap', 'ui.calendar', 'templates'])\n\nngApp.config ($routeProvider) ->\n    $routeProvider\n      # .when '/dolls',\n      .when '/',\n        templateUrl: 'dolls.html'\n        controller: 'DollsController'\n      .when '/login',\n        templateUrl: 'login.html'\n        controller: 'AuthController'\n      .when '/links',\n        templateUrl: 'links.html'\n        controller: 'LinksController'\n      .when '/calendar',\n        templateUrl: 'calendar.html'\n        controller: 'CalendarController'\n      .when '/dolls',\n        templateUrl: 'dolls.html'\n        controller: 'DollsController'\n      .when \"/dolls/doll/:dollSlug\",\n        templateUrl: 'doll.html'\n        controller: 'DollShowController'\n      .when \"/profiles\",\n        templateUrl: 'profiles.html'\n        controller: 'ProfilesController'\n      .when \"/profiles/profile/:profileSlug\",\n        templateUrl: 'profile.html'\n        controller: 'ProfileShowController'\n      .otherwise\n        redirectTo: '/'\n\n  .run ['$rootScope', '$location', ($rootScope, $location) ->\n    $rootScope.$on '$locationChangeStart', (event, absNewURL, absOldURL) ->\n      # console.log \"Location change #{absOldURL}\"\n      if absOldURL is $location.absUrl()\n        $rootScope.previousPage = \"#/dolls\"\n        console.log \"Fake Previous Page #{$rootScope.previousPage}\"\n      else\n        $rootScope.previousPage = absOldURL\n  ]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.controller \"CalendarController\", ['$scope', '$log', 'Events', ($scope, $log, Events) ->\n    $log.log \"CalendarController loaded...\"\n    $scope.log = $log\n\n    # Events.get().$promise.then (data) ->\n    #   console.log \"EventData is \"\n    #   console.dir data\n    #   $scope.data = data\n\n    $scope.eventSources = Events.get()\n\n    ### config object ###\n\n    $scope.uiConfig = calendar:\n      height: 450\n      editable: true\n      header:\n        left: 'month basicWeek basicDay agendaWeek agendaDay'\n        center: 'title'\n        right: 'today prev,next'\n      dayClick: $scope.alertEventOnClick\n      eventDrop: $scope.alertOnDrop\n      eventResize: $scope.alertOnResize\n\n    ]\n","ngApp = angular.module \"dollhouse\"\n\n\n\nngApp.controller \"AuthController\", ['$scope', '$http', '$window', 'lo', '$log', 'Profiles', ($scope, $http, $window, lo, $log, Profiles) ->\n    $log.log \"AuthController loaded...\"\n    $scope.log = $log\n\n    $scope.user =\n      username: 'john.doe'\n      password: 'foobar'\n    $scope.message = ''\n\n    $scope.submit = ->\n      $http.post('/users/login', $scope.user)\n        .success((data, status, headers, config) ->\n          $window.sessionStorage.token = data.token\n          $scope.message = 'Welcome'\n          return\n        ).error (data, status, headers, config) ->\n          # Erase the token if the user fails to log in\n          delete $window.sessionStorage.token\n          # Handle login errors here\n          $scope.message = 'Error: Invalid user or password'\n          return\n      return\n    # return\n\n\n    # profileDetails = (profile) ->\n    #   profile.details = []\n    #   if profile.name?\n    #     console.log \"Name is found: #{profile.name.first}\"\n    #     profile.details.push\n    #       key: \"name\"\n    #       val: profile.name.first\n    #   if profile.location?.suburb\n    #     console.log \"Location is found: #{profile.location}\"\n    #     profile.details.push\n    #       key: \"location\"\n    #       val: profile.location.suburb\n    #   if profile.groups?\n    #     profile.details.push\n    #       key: \"Groups\"\n    #       val: profile.groups\n    #\n\n    # Profiles.get().$promise.then (data) ->\n    #   console.log \"profileData is \"\n    #   for profile in data.profiles\n    #     profileDetails profile\n    #     if profile.profile\n    #       profile.profile.avatar ?=\n    #         url: lo.sample(hasslehoffs)\n    #\n    #   console.dir data\n    #   $scope.data = data\n    ]\n\n# ngApp.controller \"ProfileShowController\", ['$scope', \"lo\", '$routeParams', 'Profile', ($scope, lo, $routeParams, Profile) ->\n#\n#     console.log \"ProfileShowController loaded...\"\n#     $scope.lo = lo\n#\n#     # TODO: - extract this identical method from both here &\n#     # DollsController\n#     #  - a directive?\n#     #  - a filter?\n#     $scope.getAvatar = (url) ->\n#       if url\n#         { 'background-image': \"url(#{url})\" }\n#       else\n#         { 'background-image': \"url(http://res.cloudinary.com/keystone-demo/image/upload/v1425761612/qkeekodoglor4wje5hug.jpg)\" }\n#         # { 'background-image': \"url(#{lo.sample(hasslehoffs)})\" }\n#\n#     Profile.get(profile: $routeParams.profileSlug).$promise.then (data) ->\n#       data.profile.profile.avatar ?=\n#         url: lo.sample(hasslehoffs)\n#       console.log \"profileData is \"\n#       console.dir data\n#       if data.dolls\n#         data.dolls = lo.chunk(data.dolls, 4)\n#       $scope.data = data\n#     ]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.controller \"DollsController\", ['$scope', 'lo', '$log', 'Dolls', 'DollFacts', ($scope, lo, $log, Dolls, DollFacts) ->\n    $log.log \"DollsController loaded...\"\n    $scope.log = $log\n\n    $scope.makers = DollFacts.makers\n\n    # Experiment with popover for filters\n    $scope.dynamicPopover =\n      content: 'Hello, World!'\n      templateUrl: 'widgets/filter_popup.html'\n      title: 'Title'\n\n\n    $scope.getAvatar = (url) ->\n      if url\n        { 'background-image': \"url(#{url})\" }\n      else\n        { 'background-image': \"url(http://res.cloudinary.com/keystone-demo/image/upload/v1425761612/qkeekodoglor4wje5hug.jpg)\" }\n\n    Dolls.get().$promise.then (data) ->\n      console.log \"dollyData is \"\n      console.dir data\n      data.dolls = lo.chunk(data.dolls, 4)\n      $scope.data = data\n    ]\n\nngApp.controller \"DollShowController\", ['$scope', '$routeParams', '$modal', '$templateCache', 'Doll', ($scope, $routeParams, $modal, $templateCache, Doll) ->\n\n    Doll.get(doll: $routeParams.dollSlug).$promise.then (data) ->\n      console.log \"dollData is \"\n      console.dir data\n\n      $scope.getAvatar = (url) ->\n        if url\n          { 'background-image': \"url(#{url})\" }\n        else\n          { 'background-image': \"url(http://res.cloudinary.com/keystone-demo/image/upload/v1425761612/qkeekodoglor4wje5hug.jpg)\" }\n\n\n      # MODALS\n      $scope.items = ['item1', 'item2', 'item3']\n      # $scope.items = data.doll.gallery\n      $scope.animationsEnabled = true\n\n      $scope.open = (size, doll) ->\n        console.log \"dollModal is \"\n        console.dir data\n\n        modalInstance = $modal.open(\n          animation: $scope.animationsEnabled\n          # templateUrl: 'widgets/modal.html'\n          template: $templateCache.get(\"widgets/modal.html\")\n          backdrop: true\n          # windowTemplateUrl: \"widgets/modalWindow.html\"\n          # template: \"img(ng-if='doll.url' src='{{doll.url}}').img\"\n          # template: \"<img src=#{doll.url} class='img'></img><p>#{doll.url}</p>\"\n          # template: \"<img src=#{doll.url} class='img'></img>\"\n          controller: 'ModalInstanceCtrl'\n          # doll: doll\n          size: size\n          # scope: ->\n          #   console.log \"scope called...\"\n          #   doll: doll\n          resolve:\n            items: ->\n              $scope.items\n            doll: ->\n              doll\n        )\n        modalInstance.result.then ((selectedItem) ->\n          $scope.selected = selectedItem\n          return\n        ), ->\n          # $log.info 'Modal dismissed at: ' + new Date\n          return\n        return\n\n      $scope.toggleAnimation = ->\n        $scope.animationsEnabled = not $scope.animationsEnabled\n        return\n\n\n      $scope.data = data\n      # SET UP DETAIL LIST\n      $scope.details = [\n        {\n          key: \"Name\"\n          val: data.doll.name\n        }\n        {\n          key: \"Brand\"\n          val: data.doll.maker\n\n        }\n        {\n          key: \"Sculpt\"\n          val: data.doll.sculpt\n        }\n      ]\n    ]\n\nngApp.controller 'ModalInstanceCtrl', ($scope, $modalInstance, items, doll) ->\n  $scope.items = items\n  $scope.doll = doll\n  $scope.selected =\n    item: $scope.items[0]\n\n  $scope.ok = ->\n    $modalInstance.close $scope.selected.item\n    return\n\n  $scope.cancel = ->\n    $modalInstance.dismiss 'cancel'\n    return\n\n  console.log \"in ModalInstanceCtrl & the scope is \"\n  console.dir $scope\n\n  return\n","ngApp = angular.module \"dollhouse\"\n\nngApp.controller \"LinksController\", ['$scope', 'lo', '$log', 'Links', ($scope, lo, $log, Links) ->\n    $log.log \"LinksController loaded...\"\n    $scope.log = $log\n\n    Links.get().$promise.then (data) ->\n      console.log \"LinkData is \"\n      console.dir data\n      $scope.data = data\n    ]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.controller \"MainController\", ['$scope', '$log', ($scope, $log) ->\n    $log.log \"MainControler loaded...\"\n    $scope.log = $log\n    $scope.awesomeThings = [\n      \"HTML5 Boilerplate\"\n      \"AngularJS\"\n      \"Karma\"\n      \"Coffeescript\"\n      \"Less\"\n      \"Jade\"\n    ]]\n","ngApp = angular.module \"dollhouse\"\n\nhasslehoffs = [\n  \"http://res.cloudinary.com/doll-social-club/image/upload/v1433910519/missing/hasselhoff.jpg\"\n  \"http://res.cloudinary.com/doll-social-club/image/upload/v1433910455/missing/David_Hasselhoff.jpg\"\n  \"http://res.cloudinary.com/doll-social-club/image/upload/v1433910462/missing/1342557375_davidhasselhoff.jpg\"\n]\n\nngApp.controller \"ProfilesController\", ['$scope', 'lo', '$log', 'Profiles', ($scope, lo, $log, Profiles) ->\n    $log.log \"ProfileController loaded...\"\n    $scope.log = $log\n\n    # hasslehoffs = [\n    #   \"http://res.cloudinary.com/doll-social-club/image/upload/v1433910519/missing/hasselhoff.jpg\"\n    #   \"http://res.cloudinary.com/doll-social-club/image/upload/v1433910455/missing/David_Hasselhoff.jpg\"\n    #   \"http://res.cloudinary.com/doll-social-club/image/upload/v1433910462/missing/1342557375_davidhasselhoff.jpg\"\n    # ]\n\n    profileDetails = (profile) ->\n      profile.details = []\n      if profile.name?\n        console.log \"Name is found: #{profile.name.first}\"\n        profile.details.push\n          key: \"name\"\n          val: profile.name.first\n      if profile.location?.suburb\n        console.log \"Location is found: #{profile.location}\"\n        profile.details.push\n          key: \"location\"\n          val: profile.location.suburb\n      if profile.groups?\n        profile.details.push\n          key: \"Groups\"\n          val: profile.groups\n\n\n    Profiles.get().$promise.then (data) ->\n      console.log \"profileData is \"\n      for profile in data.profiles\n        profileDetails profile\n        if profile.profile\n          profile.profile.avatar ?=\n            url: lo.sample(hasslehoffs)\n\n      console.dir data\n      $scope.data = data\n    ]\n\nngApp.controller \"ProfileShowController\", ['$scope', \"lo\", '$routeParams', 'Profile', ($scope, lo, $routeParams, Profile) ->\n\n    console.log \"ProfileShowController loaded...\"\n    $scope.lo = lo\n\n    # TODO: - extract this identical method from both here &\n    # DollsController\n    #  - a directive?\n    #  - a filter?\n    $scope.getAvatar = (url) ->\n      if url\n        { 'background-image': \"url(#{url})\" }\n      else\n        { 'background-image': \"url(http://res.cloudinary.com/keystone-demo/image/upload/v1425761612/qkeekodoglor4wje5hug.jpg)\" }\n        # { 'background-image': \"url(#{lo.sample(hasslehoffs)})\" }\n\n    Profile.get(profile: $routeParams.profileSlug).$promise.then (data) ->\n      data.profile.profile.avatar ?=\n        url: lo.sample(hasslehoffs)\n      console.log \"profileData is \"\n      console.dir data\n      if data.dolls\n        data.dolls = lo.chunk(data.dolls, 4)\n      $scope.data = data\n    ]\n","ngApp = angular.module(\"dollhouse\")\n\nngApp.directive \"dollMixin\", [\"$templateCache\", ($templateCache) ->\n  scope: true\n  # scope:\n  #   doll: \"=\"\n  #   getAvatar: \"&getAvatar\"\n    # getAvatar: (url) ->\n    #   return \"happyDays\"\n      # $log(\"getAvatar called with #{url}\")\n      # if url\n      #   { 'background-image': \"url(#{url})\" }\n      # else\n      #   { 'background-image': \"url(http://res.cloudinary.com/keystone-demo/image/upload/v1425761612/qkeekodoglor4wje5hug.jpg)\" }\n  template: $templateCache.get(\"directives/dollMixin.html\")\n  # templateURL: \"directives/dollMixin.html\"\n]\n\nngApp.directive \"profileMixin\", [\"$templateCache\", ($templateCache) ->\n  scope:\n    profile: \"=\"\n    data: \"=\"\n  template: $templateCache.get(\"directives/profileMixin.html\")\n  # templateURL: \"directives/dollMixin.html\"\n]\n\nngApp.directive \"linkMixin\", [\"$templateCache\", ($templateCache) ->\n  scope:\n    link: \"=\"\n  template: $templateCache.get(\"directives/linkMixin.html\")\n]\n\nngApp.directive \"detailList\", [\"$templateCache\", ($templateCache) ->\n  scope:\n    details: \"=\"\n  template: $templateCache.get(\"directives/detailList.html\")\n]\n\nngApp.directive \"badges\", [\"$templateCache\", ($templateCache) ->\n  scope:\n    badge: \"=\"\n  template: $templateCache.get(\"directives/badges.html\")\n]\n","angular.module(\"dollhouse\").filter \"fullName\", ->\n  (name) ->\n    return \"#{name.first} #{name.last}\"\n\n# Cant seem to use this in a view properly...\n.filter \"loChunk\", ->\n  (list) ->\n    return lo.chunk(list, 3)\n\n.filter \"backName\", ->\n  (url) ->\n    if url.match /dolls\\/doll/\n      return \"Doll\"\n    else if url.match /dolls/\n      return \"Dolls\"\n    else if url.match /profiles\\/profile/\n      return \"Profile\"\n    else if url.match /profiles/\n      return \"Profiles\"\n    else if url.match /links/\n      return \"Community Links\"\n    else\n      return \"Previous Page\"\n","ngApp = angular.module \"dollhouse\"\n\nngApp.factory \"Dolls\", [ \"$resource\", ($resource) ->\n  $resource \"/api/dolls\"\n  ]\n  .factory \"Doll\", [ \"$resource\", ($resource) ->\n    $resource \"/api/dolls/show/:doll\"\n  ]\n  .factory \"DollFacts\", [ ->\n    makers: dollMakers\n  ]\n\ndollMakers = [\n  'Angell Studio'\n  'Crobidoll'\n  'Dearmine'\n  'Doll Chateau'\n  'Dollmore'\n  'Dollshe'\n  'Dollzone'\n  'Dreaming Doll'\n  'Elf Doll'\n  'Fairyland'\n  'Impldoll'\n  'Iplehouse'\n  'Leekeworld'\n  'Luts'\n  'Migidoll'\n  'Obitsu'\n  'Peakswoods'\n  'Resinsoul'\n  'Ringdoll'\n  'Soom'\n  'Supia'\n  'Volks'\n  'Other'\n]\n","ngApp = angular.module \"dollhouse\"\n\n# ngApp.factory \"Events\", [ \"$resource\", ($resource) ->\n#   $resource \"/api/events\"\n# ]\n\n\nngApp.factory \"Events\", ->\n  get: ->\n    events: [\n      {\n        title: 'One Event'\n        start: '2015-05-07'\n      }\n      {\n        title: 'A Doll Uprising'\n        start: '2015-05-17'\n      }\n    ]\n    color: 'yellow'\n    textColor: 'black'\n","ngApp = angular.module \"dollhouse\"\n\nngApp.factory \"Links\", [ \"$resource\", ($resource) ->\n  $resource \"/api/links\"\n  ]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.factory \"lo\", [ \"$window\", ($window) ->\n  lo = $window.lo\n  # console.log \"We invoked the lodash service with #{lo}\"\n  return lo\n]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.factory \"Profiles\", [ \"$resource\", ($resource) ->\n  $resource \"/api/profiles\"\n  ]\n  .factory \"Profile\", [ \"$resource\", ($resource) ->\n    $resource \"/api/profiles/show/:profile\"\n  ]\n"],"sourceRoot":"/source/"}