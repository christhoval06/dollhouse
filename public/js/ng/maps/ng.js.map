{"version":3,"sources":["app.coffee","controllers/dollController.coffee","controllers/main.ng.coffee","controllers/profileController.coffee","directives/mixin_directives.coffee","filters/fullName.coffee","services/dolls.coffee","services/profiles.coffee"],"names":[],"mappings":"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","file":"ng.js","sourcesContent":["console.log('Angular loaded');\n\n# console.log('Angular path ' + $location.url());\n\n\nngApp = angular.module('dollhouse', ['ngRoute', 'ngResource', 'templates'])\n\nngApp.config ($routeProvider) ->\n    $routeProvider\n      # .when '/dolls',\n      .when '/',\n        templateUrl: 'dolls.html'\n        controller: 'DollsController'\n      .when \"/dolls/doll/:dollSlug\",\n        templateUrl: 'doll.html'\n        controller: 'DollShowController'\n      .when \"/profiles\",\n        templateUrl: 'profiles.html'\n        controller: 'ProfilesController'\n      .when \"/profiles/profile/:profileSlug\",\n        templateUrl: 'profile.html'\n        controller: 'ProfileShowController'\n      .otherwise\n        redirectTo: '/'\n","ngApp = angular.module \"dollhouse\"\n\nngApp.controller \"DollsController\", ['$scope', '$log', 'Dolls', ($scope, $log, Dolls) ->\n    $log.log \"DollsController loaded...\"\n    $scope.log = $log\n\n    Dolls.get().$promise.then (data) ->\n      console.log \"dollyData is \"\n      console.dir data\n      data.dolls = lo.chunk(data.dolls, 3)\n      $scope.data = data\n    ]\n\nngApp.controller \"DollShowController\", ['$scope', '$routeParams', 'Doll', ($scope, $routeParams, Doll) ->\n\n    Doll.get(doll: $routeParams.dollSlug).$promise.then (data) ->\n      console.log \"dollData is \"\n      console.dir data\n      $scope.data = data\n    ]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.controller \"MainController\", ['$scope', '$log', ($scope, $log) ->\n    $log.log \"MainControler loaded...\"\n    $scope.log = $log\n    $scope.awesomeThings = [\n      \"HTML5 Boilerplate\"\n      \"AngularJS\"\n      \"Karma\"\n      \"Coffeescript\"\n      \"Less\"\n      \"Jade\"\n    ]]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.controller \"ProfilesController\", ['$scope', '$log', 'Profiles', ($scope, $log, Profiles) ->\n    $log.log \"ProfileController loaded...\"\n    $scope.log = $log\n\n    Profiles.get().$promise.then (data) ->\n      console.log \"profileData is \"\n      data.profiles = lo.chunk(data.profiles, 3)\n      console.dir data\n      $scope.data = data\n    ]\n\nngApp.controller \"ProfileShowController\", ['$scope', '$routeParams', 'Profile', ($scope, $routeParams, Profile) ->\n\n    Profile.get(profile: $routeParams.profileSlug).$promise.then (data) ->\n      console.log \"profileData is \"\n      console.dir data\n      $scope.data = data\n    ]\n","ngApp = angular.module(\"dollhouse\")\n\nngApp.directive \"dollMixin\", [\"$templateCache\", ($templateCache) ->\n  scope:\n    doll: \"=\"\n  template: $templateCache.get(\"directives/dollMixin.html\")\n  # templateURL: \"directives/dollMixin.html\"\n]\n\nngApp.directive \"profileMixin\", [\"$templateCache\", ($templateCache) ->\n  scope:\n    profile: \"=\"\n  template: $templateCache.get(\"directives/profileMixin.html\")\n  # templateURL: \"directives/dollMixin.html\"\n]\n","angular.module(\"dollhouse\").filter \"fullName\", ->\n  (name) ->\n    return \"#{name.first} #{name.last}\"\n","ngApp = angular.module \"dollhouse\"\n\nngApp.factory \"Dolls\", [ \"$resource\", ($resource) ->\n  $resource \"/api/dolls\"\n]\n  .factory \"Doll\", [ \"$resource\", ($resource) ->\n    $resource \"/api/dolls/show/:doll\"\n]\n","ngApp = angular.module \"dollhouse\"\n\nngApp.factory \"Profiles\", [ \"$resource\", ($resource) ->\n  $resource \"/api/profiles\"\n]\n  .factory \"Profile\", [ \"$resource\", ($resource) ->\n    $resource \"/api/profiles/show/:profile\"\n]\n"],"sourceRoot":"/source/"}