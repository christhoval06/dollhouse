extends ../../layouts/default
include ../../mixins/dollHelpers

block intro
  script(src='//tinymce.cachefly.net/4.2/tinymce.min.js')
  script.
    tinymce.init({selector:'textarea.mce'});
  .container
    h1 Edit Your Profile
    h2 Your name is #{data.profile.name}
    
block content
  .container
    if enquirySubmitted
      h3 Thanks for submitting Your Profile!
    else
      .row: .col-sm-8.col-md-6
        form.newProfile(method='post', enctype="multipart/form-data")
          input(type='hidden', name='action', value='/profiles/new')
          .row
            .col-sm-6
              .form-group(class=validationErrors.name_first ? 'has-error' : null)
                label First Name
                input(type='text', name='name_first', value=data.profile.name.first).form-control
            .col-sm-6
              .form-group(class=validationErrors.name_last ? 'has-error' : null)
                label Last Name
                input(type='text', name='name_last', value=data.profile.name.last).form-control
          .form-group(class=validationErrors.location ? 'has-error' : null)
            label Location
            input(type='text', name='location', value=data.profile.location).form-control
          if data.profile.location !== undefined
            //- h2 Location is |#{data.profile.location != undefined}| 
            h2 Location is |#{lo.isEmpty(data.profile.location)}| 
            include ../../partials/_location_fields
          .form-group(class=validationErrors.userName ? 'has-error' : null)
            label userName
            input(type='text', name='userName', value=data.profile.profile.userName).form-control
          h2 Permissions
          .form-group(class=validationErrors.emailShow ? 'has-error' : null)
            label Show Email Address?
            input(type='checkbox', name='emailShow', value=data.profile.profile.emailShow).form-control
          .form-group(class=validationErrors.avatar ? 'has-error' : null)
            label Your Avatar
            img(href=data.profile.profile.avatar.url heigh="200px")
            input(type='file', name='profile.avatar_upload', value=data.profile.profile.avatar).form-control
          .form-group(class=validationErrors.about_brief ? 'has-error' : null)
            label Brief Info
            textarea.mce(name='profile.about.brief', rows=4).form-control= data.profile.profile.about.brief
          .form-group(class=validationErrors.about_extended ? 'has-error' : null)
            label Extended Info
            textarea.mce(name='profile.about.extended', rows=4).form-control= data.profile.profile.about.extended
          //- .form-group(class=validationErrors.user ? 'has-error' : null)
          //-   //- each user in users
          //-   //-   +fullName(user.name)            
          //-   label User
          //-   select(name='user').form-control
          //-     option(value='') (select one)
          //-     each user in users
          //-       //- option(value=user.id, selected=formData.user == user.id)= +fullName(user.name)
          //-       option(value=user.id, selected=formData.user == user.id) #{user.name.first} #{user.name.last}
          //-   //- input(type='text', name='name.full', value=formData['name.full']).form-control
          //- //- .form-group(class=validationErrors.maker ? 'has-error' : null)
          //- //-   label Maker
          //- //-   select(name='maker').form-control
          //- //-     option(value='') (select one)
          //- //-     each type in profiles.makers
          //- //-       option(value=type, selected=formData.maker == type)= type
          //- .form-group
          //-   label Make This Public?
          //-   select(name='state').form-control
          //-     option(value='') (select one)
          //-     each type in [{value: 'private', label: "No"}, {value: 'public', label: "Yes"}]
          //-       option(value=type.value, selected=formData.state == type.value)= type.label
          //- .form-group(class=validationErrors.avatar ? 'has-error' : null)
          //-   label Pic 
          //-   input(type='file', name='avatar_upload', value=formData.avatar).form-control
          //-   //- input(ref='fileField' type='file' name='image', value=formData.image  className='field-upload').form-control
          //-   //- input(type='hidden' name={this.props.paths.action} className='field-action' value={this.state.action})
          //-   //- input(ref='fileField' type='file' name={this.props.paths.upload} className='field-upload' onChange={this.fileChanged})
          //-   //- input(type='hidden' name={this.props.paths.action} className='field-action' value={this.state.action})
          //- 
          //- .form-group(class=validationErrors.about ? 'has-error' : null)
          //-   label Notes 
          //-   textarea(name='about.brief', placeholder='Tell us about your profile...' rows=4).form-control= formData.about_brief
          //-   //- textarea(name='content', placeholder='Tell us about your doll...' rows=4).form-control= formData.content
          //- //- .form-group
          //- //-   label Phone
          //- //-   input(type='text', name='phone', value=formData.phone, placeholder='(optional)').form-control
          //- //- .form-group(class=validationErrors.enquiryType ? 'has-error' : null)
          //- //-   label What are you contacting us about?
          //- //-   select(name='enquiryType').form-control
          //- //-     option(value='') (select one)
          //- //-     each type in enquiryTypes
          //- //-       option(value=type.value, selected=formData.enquiryType == type.value)= type.label
          //- //- .form-group(class=validationErrors.message ? 'has-error' : null)
          //- //-   label Message
          //- //-   textarea(name='message', placeholder='Leave us a message...' rows=4).form-control= formData.message
          .form-actions
            button(type='submit').btn.btn-primary Send
